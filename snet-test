#!/bin/sh -e
#h: Usage: $0 ...
#h:
#h: ... show  : Show variables.
#h:
#h: ... test1 : Print 'hello world' after forking three processes.
#h: ... test2 : Create a sine and play it.
snet_test() {
    local cmd="$1"
    shift
    case "${cmd}" in
        show)  snet_test_show_variables ;;
        test1) snet "${SNET_DIRECTORY}/examples/test1.snet";;
        test2) snet "${SNET_DIRECTORY}/examples/test2.snet";;
        *)     snet_test_error "Invalid argument: ${cmd}";;
    esac
}
snet_test_show_variables() {
    printf '%-20s : %s\n' SNET_DIRECTORY       "${SNET_DIRECTORY}"
    printf '%-20s : %s\n' SNET_AUDIO_SINK_ARGS "${SNET_AUDIO_SINK_ARGS}"
}
snet_test_calc_variables() {
    local sdir="`dirname "$0"`" pwd="`pwd`"
    if test -n "${SNET_DIRECTORY}";then
        true
    elif test -f "${sdir}/Makefile";then
        cd "${sdir}"
        SNET_DIRECTORY="`pwd`"
        cd "${pwd}"
    elif test -d "${sdir}/../share/snet";then
        cd "${sdir}/../share/snet"
        SNET_DIRECTORY="`pwd`"
        cd "${pwd}"
    fi
    if test -n "${SNET_DIRECTORY}";then
        export PATH="${SNET_DIRECTORY}:${SNET_DIRECTORY}/blocks:${PATH}"
    fi
    export SNET_AUDIO_SINK_ARGS="device=jack"
}
## -----------------------------------------------------------------------------



## -----------------------------------------------------------------------------
snet_test_error() { echo "${SCRNAME}: error: $*" >&2; }
SCRNAME="`basename "$0"`"
snet_test_calc_variables
if test @"${SCRNAME}" = @"snet-test";then
    if test -n "$1";then
        snet_test "$@"
    else
        sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|`basename $0`|g"
        echo ""
        sed -n 's/^ *#l: \{0,2\}//p' "$0"
    fi
fi
